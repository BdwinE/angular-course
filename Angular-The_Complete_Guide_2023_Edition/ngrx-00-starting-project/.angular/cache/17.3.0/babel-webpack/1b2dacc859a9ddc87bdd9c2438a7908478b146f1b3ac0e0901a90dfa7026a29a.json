{"ast":null,"code":"import { Ingredient } from '../../shared/ingredient.model';\nimport { resetEditAction } from 'src/app/store/actions/shopping-list.actions';\nimport { editedIngredientSelector } from 'src/app/store/selectors/shopping-list.selectors';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shopping-list.service\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = [\"f\"];\nfunction ShoppingEditComponent_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function ShoppingEditComponent_button_17_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onDelete());\n    });\n    i0.ɵɵtext(1, \" Delete \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ShoppingEditComponent {\n  constructor(slService, store) {\n    this.slService = slService;\n    this.store = store;\n    this.editMode = false;\n  }\n  ngOnInit() {\n    console.log('Initial mode: ' + this.editMode);\n    this.subscription = this.store.select(editedIngredientSelector).subscribe(editedIngredientData => {\n      console.log('Ingredient data');\n      console.log(editedIngredientData);\n      if (editedIngredientData.editedIngredientIndex === -1) {\n        this.editMode = false;\n      } else {\n        this.editMode = true;\n        this.editedItemIndex = editedIngredientData.editedIngredientIndex;\n        this.editedItem = editedIngredientData.editedIngredient;\n        this.slForm.setValue({\n          name: this.editedItem.name,\n          amount: this.editedItem.amount\n        });\n      }\n    });\n    // this.subscription = this.slService.startedEditing.subscribe(\n    //   (index: number) => {\n    //     this.editedItemIndex = index;\n    //     this.editMode = true;\n    //     this.editedItem = this.slService.getIngredient(index);\n    //     this.slForm.setValue({\n    //       name: this.editedItem.name,\n    //       amount: this.editedItem.amount,\n    //     });\n    //   }\n    // );\n  }\n  onSubmit(form) {\n    const value = form.value;\n    const newIngredient = new Ingredient(value.name, value.amount);\n    if (this.editMode) {\n      this.slService.updateIngredient(this.editedItemIndex, newIngredient);\n      // this.store.dispatch(\n      //   updateIngredientAction({\n      //     index: this.editedItemIndex,\n      //     newIngredient: newIngredient,\n      //   })\n      // );\n    } else {\n      this.slService.addIngredient(newIngredient);\n      // this.store.dispatch(addIngredientAction({ ingredient: newIngredient }));\n    }\n    this.editMode = false;\n    form.reset();\n  }\n  onClear() {\n    this.slForm.reset();\n    this.store.dispatch(resetEditAction());\n    this.editMode = false;\n  }\n  onDelete() {\n    this.slService.deleteIngredient(this.editedItemIndex);\n    // this.store.dispatch(\n    //   deleteIngredientAction({ index: this.editedItemIndex })\n    // );\n    this.onClear();\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.store.dispatch(resetEditAction());\n  }\n  static #_ = this.ɵfac = function ShoppingEditComponent_Factory(t) {\n    return new (t || ShoppingEditComponent)(i0.ɵɵdirectiveInject(i1.ShoppingListService), i0.ɵɵdirectiveInject(i2.Store));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ShoppingEditComponent,\n    selectors: [[\"app-shopping-edit\"]],\n    viewQuery: function ShoppingEditComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.slForm = _t.first);\n      }\n    },\n    decls: 20,\n    vars: 3,\n    consts: [[\"f\", \"ngForm\"], [1, \"row\"], [1, \"col-xs-12\"], [3, \"ngSubmit\"], [1, \"col-sm-5\", \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"ngModel\", \"\", \"required\", \"\", 1, \"form-control\"], [1, \"col-sm-2\", \"form-group\"], [\"for\", \"amount\"], [\"type\", \"number\", \"id\", \"amount\", \"name\", \"amount\", \"ngModel\", \"\", \"required\", \"\", \"pattern\", \"^[1-9]+[0-9]*$\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [\"class\", \"btn btn-danger\", \"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function ShoppingEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"form\", 3, 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ShoppingEditComponent_Template_form_ngSubmit_2_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const f_r2 = i0.ɵɵreference(3);\n          return i0.ɵɵresetView(ctx.onSubmit(f_r2));\n        });\n        i0.ɵɵelementStart(4, \"div\", 1)(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"label\", 8);\n        i0.ɵɵtext(11, \"Amount\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 1)(14, \"div\", 2)(15, \"button\", 10);\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, ShoppingEditComponent_button_17_Template, 2, 0, \"button\", 11);\n        i0.ɵɵelementStart(18, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function ShoppingEditComponent_Template_button_click_18_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onClear());\n        });\n        i0.ɵɵtext(19, \" Clear \");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        const f_r2 = i0.ɵɵreference(3);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"disabled\", !f_r2.valid);\n        i0.ɵɵadvance();\n        i0.ɵɵtextInterpolate1(\" \", ctx.editMode ? \"Update\" : \"Add\", \" \");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.editMode);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.PatternValidator, i3.NgModel, i3.NgForm, i4.NgIf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Ingredient","resetEditAction","editedIngredientSelector","i0","ɵɵelementStart","ɵɵlistener","ShoppingEditComponent_button_17_Template_button_click_0_listener","ɵɵrestoreView","_r3","ctx_r3","ɵɵnextContext","ɵɵresetView","onDelete","ɵɵtext","ɵɵelementEnd","ShoppingEditComponent","constructor","slService","store","editMode","ngOnInit","console","log","subscription","select","subscribe","editedIngredientData","editedIngredientIndex","editedItemIndex","editedItem","editedIngredient","slForm","setValue","name","amount","onSubmit","form","value","newIngredient","updateIngredient","addIngredient","reset","onClear","dispatch","deleteIngredient","ngOnDestroy","unsubscribe","_","ɵɵdirectiveInject","i1","ShoppingListService","i2","Store","_2","selectors","viewQuery","ShoppingEditComponent_Query","rf","ctx","ShoppingEditComponent_Template_form_ngSubmit_2_listener","_r1","f_r2","ɵɵreference","ɵɵelement","ɵɵtemplate","ShoppingEditComponent_button_17_Template","ShoppingEditComponent_Template_button_click_18_listener","ɵɵadvance","ɵɵproperty","valid","ɵɵtextInterpolate1"],"sources":["C:\\Users\\asolu\\PersonalDevProjects\\Udemy\\Angular-The_Complete_Guide_2023_Edition\\ngrx-00-starting-project\\src\\app\\shopping-list\\shopping-edit\\shopping-edit.component.ts","C:\\Users\\asolu\\PersonalDevProjects\\Udemy\\Angular-The_Complete_Guide_2023_Edition\\ngrx-00-starting-project\\src\\app\\shopping-list\\shopping-edit\\shopping-edit.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Observable, Subscription } from 'rxjs';\n\nimport { Ingredient } from '../../shared/ingredient.model';\nimport { ShoppingListService } from '../shopping-list.service';\nimport { StoreModel } from 'src/app/store/store.model';\nimport { Store } from '@ngrx/store';\nimport {\n  addIngredientAction,\n  deleteIngredientAction,\n  editAction,\n  resetEditAction,\n  updateIngredientAction,\n} from 'src/app/store/actions/shopping-list.actions';\nimport { editedIngredientSelector } from 'src/app/store/selectors/shopping-list.selectors';\n\n@Component({\n  selector: 'app-shopping-edit',\n  templateUrl: './shopping-edit.component.html',\n  styleUrls: ['./shopping-edit.component.css'],\n})\nexport class ShoppingEditComponent implements OnInit, OnDestroy {\n  @ViewChild('f', { static: false }) slForm: NgForm;\n  subscription: Subscription;\n  tempSubscription: Subscription;\n  editMode = false;\n  editedItemIndex: number;\n  editedItem: Ingredient;\n\n  constructor(\n    private slService: ShoppingListService,\n    private store: Store<StoreModel>\n  ) {}\n\n  ngOnInit() {\n    console.log('Initial mode: ' + this.editMode);\n    this.subscription = this.store\n      .select(editedIngredientSelector)\n      .subscribe((editedIngredientData) => {\n        console.log('Ingredient data');\n        console.log(editedIngredientData);\n        if (editedIngredientData.editedIngredientIndex === -1) {\n          this.editMode = false;\n        } else {\n          this.editMode = true;\n          this.editedItemIndex = editedIngredientData.editedIngredientIndex;\n          this.editedItem = editedIngredientData.editedIngredient;\n          this.slForm.setValue({\n            name: this.editedItem.name,\n            amount: this.editedItem.amount,\n          });\n        }\n      });\n\n    // this.subscription = this.slService.startedEditing.subscribe(\n    //   (index: number) => {\n    //     this.editedItemIndex = index;\n    //     this.editMode = true;\n    //     this.editedItem = this.slService.getIngredient(index);\n    //     this.slForm.setValue({\n    //       name: this.editedItem.name,\n    //       amount: this.editedItem.amount,\n    //     });\n    //   }\n    // );\n  }\n\n  onSubmit(form: NgForm) {\n    const value = form.value;\n    const newIngredient = new Ingredient(value.name, value.amount);\n    if (this.editMode) {\n      this.slService.updateIngredient(this.editedItemIndex, newIngredient);\n      // this.store.dispatch(\n      //   updateIngredientAction({\n      //     index: this.editedItemIndex,\n      //     newIngredient: newIngredient,\n      //   })\n      // );\n    } else {\n      this.slService.addIngredient(newIngredient);\n      // this.store.dispatch(addIngredientAction({ ingredient: newIngredient }));\n    }\n    this.editMode = false;\n    form.reset();\n  }\n\n  onClear() {\n    this.slForm.reset();\n    this.store.dispatch(resetEditAction());\n    this.editMode = false;\n  }\n\n  onDelete() {\n    this.slService.deleteIngredient(this.editedItemIndex);\n    // this.store.dispatch(\n    //   deleteIngredientAction({ index: this.editedItemIndex })\n    // );\n    this.onClear();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.store.dispatch(resetEditAction());\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-xs-12\">\n    <form (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\">\n      <div class=\"row\">\n        <div class=\"col-sm-5 form-group\">\n          <label for=\"name\">Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            class=\"form-control\"\n            name=\"name\"\n            ngModel\n            required\n          />\n        </div>\n        <div class=\"col-sm-2 form-group\">\n          <label for=\"amount\">Amount</label>\n          <input\n            type=\"number\"\n            id=\"amount\"\n            class=\"form-control\"\n            name=\"amount\"\n            ngModel\n            required\n            pattern=\"^[1-9]+[0-9]*$\"\n          />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"!f.valid\">\n            {{ editMode ? \"Update\" : \"Add\" }}\n          </button>\n          <button\n            class=\"btn btn-danger\"\n            type=\"button\"\n            (click)=\"onDelete()\"\n            *ngIf=\"editMode\"\n          >\n            Delete\n          </button>\n          <button class=\"btn btn-primary\" type=\"button\" (click)=\"onClear()\">\n            Clear\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}