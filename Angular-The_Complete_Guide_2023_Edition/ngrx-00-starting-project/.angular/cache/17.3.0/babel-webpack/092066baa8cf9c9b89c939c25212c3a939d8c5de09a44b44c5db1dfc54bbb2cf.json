{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport { Ingredient } from '../../shared/ingredient.model';\nimport { addIngredientAction, addIngredientsAction, deleteIngredientAction, editAction, resetEditAction, updateIngredientAction } from '../actions/shopping-list.actions';\nconst ingredientsState = {\n  ingredients: [new Ingredient('Apples', 5), new Ingredient('Tomatoes', 10)],\n  edit: {\n    editedIngredient: null,\n    editedIngredientIndex: -1\n  }\n};\nexport const shoppingListReducer = createReducer(ingredientsState, on(addIngredientAction, (state, action) => {\n  const newIngredients = state.ingredients.slice();\n  newIngredients.push(action.ingredient);\n  const newState = JSON.parse(JSON.stringify(state)); //remove readonly from properties\n  newState['ingredients'] = newIngredients;\n  return newState;\n}), on(addIngredientsAction, (state, action) => {\n  const newIngredients = state.ingredients.slice();\n  newIngredients.push(...action.ingredients);\n  const newState = JSON.parse(JSON.stringify(state)); //remove readonly from properties\n  newState['ingredients'] = newIngredients;\n  return newState;\n}), on(updateIngredientAction, (state, action) => {\n  const newIngredients = state.ingredients.slice();\n  newIngredients[action.index] = action.newIngredient;\n  const newState = JSON.parse(JSON.stringify(state)); //remove readonly from properties\n  newState['ingredients'] = newIngredients;\n  return newState;\n}), on(deleteIngredientAction, (state, action) => {\n  const newIngredients = state.ingredients.slice();\n  newIngredients.splice(action.index, 1);\n  const newState = JSON.parse(JSON.stringify(state)); //remove readonly from properties\n  newState['ingredients'] = newIngredients;\n  return newState;\n}), on(editAction, (state, action) => {\n  const newEditedIngredientIndex = action.editIndex;\n  const newEditedIngredientItem = action.editIngredientItem;\n  const newState = JSON.parse(JSON.stringify(state)); //remove readonly from properties\n  newState['edit']['editedIngredientIndex'] = newEditedIngredientIndex;\n  newState['edit']['editedIngredient'] = newEditedIngredientItem;\n  return newState;\n}), on(resetEditAction, (state, action) => {\n  const newState = JSON.parse(JSON.stringify(state));\n  newState['edit']['editedIngredientIndex'] = -1;\n  newState['edit']['editedIngredient'] = null;\n  return newState;\n}));","map":{"version":3,"names":["createReducer","on","Ingredient","addIngredientAction","addIngredientsAction","deleteIngredientAction","editAction","resetEditAction","updateIngredientAction","ingredientsState","ingredients","edit","editedIngredient","editedIngredientIndex","shoppingListReducer","state","action","newIngredients","slice","push","ingredient","newState","JSON","parse","stringify","index","newIngredient","splice","newEditedIngredientIndex","editIndex","newEditedIngredientItem","editIngredientItem"],"sources":["C:\\Users\\asolu\\PersonalDevProjects\\Udemy\\Angular-The_Complete_Guide_2023_Edition\\ngrx-00-starting-project\\src\\app\\store\\reducers\\shopping-list.reducer.ts"],"sourcesContent":["import { createReducer, on } from '@ngrx/store';\r\nimport { Ingredient } from '../../shared/ingredient.model';\r\nimport {\r\n  addIngredientAction,\r\n  addIngredientsAction,\r\n  deleteIngredientAction,\r\n  editAction,\r\n  resetEditAction,\r\n  updateIngredientAction,\r\n} from '../actions/shopping-list.actions';\r\nimport { IngredientsListStoreModel } from 'src/app/store/store.model';\r\n\r\nconst ingredientsState: IngredientsListStoreModel = {\r\n  ingredients: [new Ingredient('Apples', 5), new Ingredient('Tomatoes', 10)],\r\n  edit: { editedIngredient: null, editedIngredientIndex: -1 },\r\n};\r\nexport const shoppingListReducer = createReducer(\r\n  ingredientsState,\r\n  on(addIngredientAction, (state, action) => {\r\n    const newIngredients = state.ingredients.slice();\r\n    newIngredients.push(action.ingredient);\r\n    const newState = JSON.parse(JSON.stringify(state)); //remove readonly from properties\r\n    newState['ingredients'] = newIngredients;\r\n    return newState;\r\n  }),\r\n  on(addIngredientsAction, (state, action) => {\r\n    const newIngredients = state.ingredients.slice();\r\n    newIngredients.push(...action.ingredients);\r\n\r\n    const newState = JSON.parse(JSON.stringify(state)); //remove readonly from properties\r\n    newState['ingredients'] = newIngredients;\r\n    return newState;\r\n  }),\r\n  on(updateIngredientAction, (state, action) => {\r\n    const newIngredients = state.ingredients.slice();\r\n    newIngredients[action.index] = action.newIngredient;\r\n\r\n    const newState = JSON.parse(JSON.stringify(state)); //remove readonly from properties\r\n    newState['ingredients'] = newIngredients;\r\n    return newState;\r\n  }),\r\n  on(deleteIngredientAction, (state, action) => {\r\n    const newIngredients = state.ingredients.slice();\r\n    newIngredients.splice(action.index, 1);\r\n\r\n    const newState = JSON.parse(JSON.stringify(state)); //remove readonly from properties\r\n    newState['ingredients'] = newIngredients;\r\n    return newState;\r\n  }),\r\n  on(editAction, (state, action) => {\r\n    const newEditedIngredientIndex = action.editIndex;\r\n    const newEditedIngredientItem = action.editIngredientItem;\r\n\r\n    const newState = JSON.parse(JSON.stringify(state)); //remove readonly from properties\r\n\r\n    newState['edit']['editedIngredientIndex'] = newEditedIngredientIndex;\r\n    newState['edit']['editedIngredient'] = newEditedIngredientItem;\r\n\r\n    return newState;\r\n  }),\r\n  on(resetEditAction, (state, action) => {\r\n    const newState = JSON.parse(JSON.stringify(state));\r\n    newState['edit']['editedIngredientIndex'] = -1;\r\n    newState['edit']['editedIngredient'] = null;\r\n    return newState;\r\n  })\r\n);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}