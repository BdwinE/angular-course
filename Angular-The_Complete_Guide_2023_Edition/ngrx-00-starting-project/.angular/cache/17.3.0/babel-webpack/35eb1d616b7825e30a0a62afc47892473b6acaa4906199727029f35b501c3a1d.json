{"ast":null,"code":"import { logoutAction } from '../store/actions/auth.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nexport class AuthService {\n  constructor(store) {\n    this.store = store;\n  }\n  setLogoutTimer(expirationDuration) {\n    this.tokenExpirationTimer = setTimeout(() => {\n      this.store.dispatch(logoutAction());\n    }, expirationDuration);\n  }\n  clearLogoutTime() {\n    if (this.tokenExpirationTimer) {\n      clearTimeout(this.tokenExpirationTimer);\n      this.tokenExpirationTimer = null;\n    }\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.Store));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["logoutAction","AuthService","constructor","store","setLogoutTimer","expirationDuration","tokenExpirationTimer","setTimeout","dispatch","clearLogoutTime","clearTimeout","_","i0","ɵɵinject","i1","Store","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\asolu\\PersonalDevProjects\\Udemy\\Angular-The_Complete_Guide_2023_Edition\\ngrx-00-starting-project\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { catchError, tap } from 'rxjs/operators';\nimport { throwError, BehaviorSubject } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\nimport { User } from './user.model';\nimport { Store } from '@ngrx/store';\nimport {\n  authenticateAction,\n  logoutAction,\n} from '../store/actions/auth.actions';\n\nexport interface AuthResponseData {\n  kind: string;\n  idToken: string;\n  email: string;\n  refreshToken: string;\n  expiresIn: string;\n  localId: string;\n  registered?: boolean;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  //user = new BehaviorSubject<User>(null);\n  private tokenExpirationTimer: any;\n\n  constructor(private store: Store) {}\n\n  setLogoutTimer(expirationDuration: number) {\n    this.tokenExpirationTimer = setTimeout(() => {\n      this.store.dispatch(logoutAction());\n    }, expirationDuration);\n  }\n\n  clearLogoutTime() {\n    if (this.tokenExpirationTimer) {\n      clearTimeout(this.tokenExpirationTimer);\n      this.tokenExpirationTimer = null;\n    }\n  }\n}\n"],"mappings":"AASA,SAEEA,YAAY,QACP,+BAA+B;;;AAatC,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,KAAY;IAAZ,KAAAA,KAAK,GAALA,KAAK;EAAU;EAEnCC,cAAcA,CAACC,kBAA0B;IACvC,IAAI,CAACC,oBAAoB,GAAGC,UAAU,CAAC,MAAK;MAC1C,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACR,YAAY,EAAE,CAAC;IACrC,CAAC,EAAEK,kBAAkB,CAAC;EACxB;EAEAI,eAAeA,CAAA;IACb,IAAI,IAAI,CAACH,oBAAoB,EAAE;MAC7BI,YAAY,CAAC,IAAI,CAACJ,oBAAoB,CAAC;MACvC,IAAI,CAACA,oBAAoB,GAAG,IAAI;IAClC;EACF;EAAC,QAAAK,CAAA,G;qBAjBUV,WAAW,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,KAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXf,WAAW;IAAAgB,OAAA,EAAXhB,WAAW,CAAAiB,IAAA;IAAAC,UAAA,EADE;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}