{"ast":null,"code":"import { map, tap } from 'rxjs/operators';\nimport { setRecipesAction } from '../store/actions/recipes.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../recipes/recipe.service\";\nimport * as i3 from \"@ngrx/store\";\nexport class DataStorageService {\n  constructor(http, recipeService, store) {\n    this.http = http;\n    this.recipeService = recipeService;\n    this.store = store;\n  }\n  storeRecipes() {\n    const recipes = this.recipeService.getRecipes();\n    this.http.put('https://recipe-app-project-98dbb-default-rtdb.firebaseio.com/recipes.json', recipes).subscribe(response => {\n      console.log(response);\n    });\n  }\n  fetchRecipes() {\n    return this.http.get('https://recipe-app-project-98dbb-default-rtdb.firebaseio.com/recipes.json').pipe(map(recipes => {\n      return recipes.map(recipe => {\n        return {\n          ...recipe,\n          ingredients: recipe.ingredients ? recipe.ingredients : []\n        };\n      });\n    }), tap(recipes => {\n      //this.recipeService.setRecipes(recipes);\n      this.store.dispatch(setRecipesAction({\n        recipes: recipes\n      }));\n    }));\n  }\n  static #_ = this.ɵfac = function DataStorageService_Factory(t) {\n    return new (t || DataStorageService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.RecipeService), i0.ɵɵinject(i3.Store));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataStorageService,\n    factory: DataStorageService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","tap","setRecipesAction","DataStorageService","constructor","http","recipeService","store","storeRecipes","recipes","getRecipes","put","subscribe","response","console","log","fetchRecipes","get","pipe","recipe","ingredients","dispatch","_","i0","ɵɵinject","i1","HttpClient","i2","RecipeService","i3","Store","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\asolu\\PersonalDevProjects\\Udemy\\Angular-The_Complete_Guide_2023_Edition\\ngrx-00-starting-project\\src\\app\\shared\\data-storage.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, tap } from 'rxjs/operators';\n\nimport { Recipe } from '../recipes/recipe.model';\nimport { RecipeService } from '../recipes/recipe.service';\nimport { AuthService } from '../auth/auth.service';\nimport { StoreModel } from '../store/store.model';\nimport { Store } from '@ngrx/store';\nimport { setRecipesAction } from '../store/actions/recipes.actions';\n\n@Injectable({ providedIn: 'root' })\nexport class DataStorageService {\n  constructor(\n    private http: HttpClient,\n    private recipeService: RecipeService,\n    private store: Store<StoreModel>\n  ) {}\n\n  storeRecipes() {\n    const recipes = this.recipeService.getRecipes();\n    this.http\n      .put(\n        'https://recipe-app-project-98dbb-default-rtdb.firebaseio.com/recipes.json',\n        recipes\n      )\n      .subscribe((response) => {\n        console.log(response);\n      });\n  }\n\n  fetchRecipes() {\n    return this.http\n      .get<Recipe[]>(\n        'https://recipe-app-project-98dbb-default-rtdb.firebaseio.com/recipes.json'\n      )\n      .pipe(\n        map((recipes) => {\n          return recipes.map((recipe) => {\n            return {\n              ...recipe,\n              ingredients: recipe.ingredients ? recipe.ingredients : [],\n            };\n          });\n        }),\n        tap((recipes) => {\n          //this.recipeService.setRecipes(recipes);\n          this.store.dispatch(setRecipesAction({ recipes: recipes }));\n        })\n      );\n  }\n}\n"],"mappings":"AAEA,SAASA,GAAG,EAAEC,GAAG,QAAQ,gBAAgB;AAOzC,SAASC,gBAAgB,QAAQ,kCAAkC;;;;;AAGnE,OAAM,MAAOC,kBAAkB;EAC7BC,YACUC,IAAgB,EAChBC,aAA4B,EAC5BC,KAAwB;IAFxB,KAAAF,IAAI,GAAJA,IAAI;IACJ,KAAAC,aAAa,GAAbA,aAAa;IACb,KAAAC,KAAK,GAALA,KAAK;EACZ;EAEHC,YAAYA,CAAA;IACV,MAAMC,OAAO,GAAG,IAAI,CAACH,aAAa,CAACI,UAAU,EAAE;IAC/C,IAAI,CAACL,IAAI,CACNM,GAAG,CACF,2EAA2E,EAC3EF,OAAO,CACR,CACAG,SAAS,CAAEC,QAAQ,IAAI;MACtBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACvB,CAAC,CAAC;EACN;EAEAG,YAAYA,CAAA;IACV,OAAO,IAAI,CAACX,IAAI,CACbY,GAAG,CACF,2EAA2E,CAC5E,CACAC,IAAI,CACHlB,GAAG,CAAES,OAAO,IAAI;MACd,OAAOA,OAAO,CAACT,GAAG,CAAEmB,MAAM,IAAI;QAC5B,OAAO;UACL,GAAGA,MAAM;UACTC,WAAW,EAAED,MAAM,CAACC,WAAW,GAAGD,MAAM,CAACC,WAAW,GAAG;SACxD;MACH,CAAC,CAAC;IACJ,CAAC,CAAC,EACFnB,GAAG,CAAEQ,OAAO,IAAI;MACd;MACA,IAAI,CAACF,KAAK,CAACc,QAAQ,CAACnB,gBAAgB,CAAC;QAAEO,OAAO,EAAEA;MAAO,CAAE,CAAC,CAAC;IAC7D,CAAC,CAAC,CACH;EACL;EAAC,QAAAa,CAAA,G;qBAtCUnB,kBAAkB,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,aAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,KAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlB5B,kBAAkB;IAAA6B,OAAA,EAAlB7B,kBAAkB,CAAA8B,IAAA;IAAAC,UAAA,EADL;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}