{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { tap } from 'rxjs';\nimport * as AuthActions from '../../actions/auth.actions';\nimport { Router } from '@angular/router';\nexport const authRedirect = createEffect((actions$ = inject(Actions), router = inject(Router)) => {\n  return actions$.pipe(ofType(AuthActions.authenticateAction), tap(authSuccessAction => {\n    if (authSuccessAction.redirect) router.navigate(['/']);\n  }));\n}, {\n  functional: true,\n  dispatch: false\n});","map":{"version":3,"names":["inject","Actions","createEffect","ofType","tap","AuthActions","Router","authRedirect","actions$","router","pipe","authenticateAction","authSuccessAction","redirect","navigate","functional","dispatch"],"sources":["C:\\Users\\asolu\\PersonalDevProjects\\Udemy\\Angular-The_Complete_Guide_2023_Edition\\ngrx-00-starting-project\\src\\app\\store\\effects\\auth\\auth-success.effect.ts"],"sourcesContent":["import { inject } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { tap } from 'rxjs';\r\nimport * as AuthActions from '../../actions/auth.actions';\r\nimport { Router } from '@angular/router';\r\nimport { authenticate } from '../../actions/auth.actions';\r\n\r\nexport const authRedirect = createEffect(\r\n  (actions$ = inject(Actions), router = inject(Router)) => {\r\n    return actions$.pipe(\r\n      ofType(AuthActions.authenticateAction),\r\n      tap((authSuccessAction) => {\r\n        if (authSuccessAction.redirect) router.navigate(['/']);\r\n      })\r\n    );\r\n  },\r\n  { functional: true, dispatch: false }\r\n);\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAASC,OAAO,EAAEC,YAAY,EAAEC,MAAM,QAAQ,eAAe;AAC7D,SAASC,GAAG,QAAQ,MAAM;AAC1B,OAAO,KAAKC,WAAW,MAAM,4BAA4B;AACzD,SAASC,MAAM,QAAQ,iBAAiB;AAGxC,OAAO,MAAMC,YAAY,GAAGL,YAAY,CACtC,CAACM,QAAQ,GAAGR,MAAM,CAACC,OAAO,CAAC,EAAEQ,MAAM,GAAGT,MAAM,CAACM,MAAM,CAAC,KAAI;EACtD,OAAOE,QAAQ,CAACE,IAAI,CAClBP,MAAM,CAACE,WAAW,CAACM,kBAAkB,CAAC,EACtCP,GAAG,CAAEQ,iBAAiB,IAAI;IACxB,IAAIA,iBAAiB,CAACC,QAAQ,EAAEJ,MAAM,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EACxD,CAAC,CAAC,CACH;AACH,CAAC,EACD;EAAEC,UAAU,EAAE,IAAI;EAAEC,QAAQ,EAAE;AAAK,CAAE,CACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}